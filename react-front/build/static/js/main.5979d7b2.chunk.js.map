{"version":3,"sources":["components/navbar/navbar.js","components/authentification/login.js","services/authService.js","components/authentification/logout.js","components/authentification/privateRoute.js","services/chatService.js","components/actions/chatContainer.js","services/actionService.js","services/generalService.js","services/appliService.js","components/actions/addAction.js","components/actions/actionsList.js","services/userService.js","components/actions/actions.js","services/vmService.js","components/virtualMachines/addVm.js","components/virtualMachines/vmList.js","components/virtualMachines/vmSearch.js","components/virtualMachines/vm.js","components/applications/addAppli.js","components/applications/appliList.js","components/applications/appliSearch.js","components/applications/appli.js","components/users/userList.js","components/users/users.js","page.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","fetch","credentials","method","headers","Content-Type","then","res","json","user","setState","JSON","stringify","catch","err","console","log","handleClick","event","anchorEl","currentTarget","handleClose","display_user_info","state","privileges","username","react_default","a","createElement","display_admin_menu","MenuItem_default","onClick","Link","className","to","bind","assertThisInitialized","parse","AppBar_default","position","Toolbar_default","IconButton_default","color","aria-label","aria-owns","undefined","aria-haspopup","Menu_default","core_Menu_default","id","open","Boolean","onClose","Typography_default","variant","children","React","Component","Login","handleChange","defineProperty","target","value","handleSubmit","preventDefault","validateForm","login","password","alert","loggedin","submitted","logout","_this2","localStorage","clear","requestOptions","body","error","get_auth","name","setItem","length","removeItem","Redirect","from","redirect","navbar_navbar","Card_default","CardContent_default","onSubmit","TextField_default","label","onChange","margin","type","Button_default","block","bsSize","href","PrivateRoute","_ref","component","rest","objectWithoutProperties","Route","assign","render","getItem","pathname","location","api","ChatContainer","newMessage","messages","el","handleInputChange","e","message","Accept","chat","sendChat","concat","handleKeyDown","key","mes","current_message","read","scrollToBottom","scrollIntoView","behavior","_this3","gutterBottom","List_default","dense","style","maxHeight","overflow","ref","map","msg","ListItem_default","_id","ListItemText_default","primary","secondary","CardActions_default","onKeyDown","placeholder","size","Icon_default","reqPost","obj","changeActionStatus","status","getActionsByStatus","generateRequest","arguments","get_applis","delete_appliById","Id","AddAction","priority","file","closingTime","comment","creatorId","actionTakerId","applicationId","applicationLabel","applis","addAction","action","post_action","actions","handleAppliChange","appli","current_appli","formattedValue","Closing_Time","fullWidth","FormControl_default","InputLabel_default","Select_default","ActionList","hide","handleAdd","handleSubmitAction","act","actions_addAction","Fab_default","Add_default","current_action","prom","_this4","delete_actionById","display_actions","checked","_this5","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","Checkbox_default","handleChangeStatus","float","suppress_action","Delete_default","displayAdd","changeUserStatus","Action","chatContainer","actionsList","Divider_default","delete_vmById","AddVm","Label","File","Campus","Comment","vm","post_vm","multiple","display","htmlFor","InputProps","readOnly","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","VmList","vms","handleSubmitVm","virtualMachines_addVm","current_vm","display_vms","suppress_vm","VmSearch","term","get_vmsBySearch","Search_default","InputBase_default","Vm","handleLogout","history","push","virtualMachines_vmSearch","virtualMachines_vmList","AddAppli","updateSubDomains","selectedDomain","subDomainOptions","subDomains","selectedSubDomain","appCode","appLabel","appComment","campuses","selectedCampus","domains","newApplication","appCampus","appDomain","appSubDomain","get_campuses","get_domains","success","campusesOptions","campus","domainsOptions","domain","subDomain","AppliList","handleSubmitAppli","addAppli_AddAppli","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","newApplis","return","display_applis","suppress_appli","AppliSearch","get_applisBySearch","suppress_v","Appli","applications_appliSearch","applications_appliList","UserList","users","switch","getByStatus","inge","currentUser","displayAll","displayIngesys","dir","handleSwitch","mail","promoteUser","User","users_userList","Page","Switch","path","privateRoute","Logout","App","rel","page","isLocalhost","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","BrowserRouter","src_App","document","getElementById","URL","process","origin","addEventListener","response","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5979d7b2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport \"./navbar.css\";\r\n\r\nclass Navbar extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n\t\tthis.componentDidMount = this.componentDidMount.bind(this);\r\n\t\tthis.display_user_info=this.display_user_info.bind(this);\r\n    this.state = {\r\n      anchorEl: null,\r\n      user: null\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const requestOptions = {\r\n      credentials: \"include\",\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" }\r\n    };\r\n\r\n    fetch(\"http://localhost:5000/auth/authenticate\", requestOptions)\r\n      .then(res => res.json())\r\n      .then(user => this.setState({ user: JSON.stringify(user) }))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  handleClick = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n\t};\r\n\t\r\n\tdisplay_user_info = (user) => {\r\n\t\tif (this.state.user!=null){\r\n\t\t\t\r\n\t\t\tconst {privileges,username} = user\r\n\t\t\treturn <div> {privileges} </div>\r\n\r\n\t\t} else\r\n\t\treturn null;\r\n\t}\r\n\r\n\tdisplay_admin_menu = (user) => {\r\n\t\tif (user && user.privileges===\"sysadmin\" ){\r\n\t\t\t\r\n\t\t\t\r\n\t\t\treturn (\r\n\t\t\t<MenuItem onClick={this.handleClose}>\r\n\t\t\t<Link className=\"nav-link\" to=\"users\">\r\n\t\t\t\tdans le futur page admin\r\n\t\t\t</Link>\r\n\t\t</MenuItem>\r\n\t\t\t)\r\n\t\t} else\r\n\t\treturn null;\r\n\t}\r\n\r\n\r\n  render(props) {\r\n\t\tconst user=JSON.parse(this.state.user)\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Menu\"\r\n              aria-owns={this.anchorEl ? \"simple-menu\" : undefined}\r\n              aria-haspopup=\"true\"\r\n              onClick={this.handleClick}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={this.state.anchorEl}\r\n              open={Boolean(this.state.anchorEl)}\r\n              onClose={this.handleClose}\r\n            >\r\n              <MenuItem onClick={this.handleClose}>\r\n                <Link className=\"nav-link\" to=\"/actions\">\r\n                  Home\r\n                </Link>\r\n              </MenuItem>\r\n\r\n              <MenuItem onClick={this.handleClose}>\r\n                <Link className=\"nav-link\" to=\"/applis\">\r\n                  Applications\r\n                </Link>\r\n              </MenuItem>\r\n\r\n              <MenuItem onClick={this.handleClose}>\r\n                <Link className=\"nav-link\" to=\"/vms\">\r\n                  Virtuals Machines\r\n                </Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t{this.display_admin_menu(user)}\r\n            </Menu>\r\n\r\n\t\t\t\t\t\t\r\n\r\n            <Typography variant=\"h6\" color=\"inherit\">\r\n              ViKi, Virtual Machines Manager\r\n            </Typography>\r\n\r\n            {this.display_user_info(user)}\r\n            <div className=\"children\">{this.props.children}</div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport { get_auth } from '../../services/authService'\r\nimport './login.css';\r\n\r\nimport Navbar from '../navbar/navbar';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //Initial state\r\n        this.state = {\r\n            loggedin: false,\r\n            username: \"\",\r\n            password: \"\",\r\n            submitted: false\r\n        };\r\n        \r\n        //Binding fonctions\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.login = this.login.bind(this);\r\n    }\r\n\r\n    \r\n    login(username, password) {\r\n        localStorage.clear();\r\n        // Ask for authentification service\r\n        return get_auth(username, password)\r\n            .then(user => {\r\n                if (user.name === username) {\r\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                    localStorage.setItem(\"user\", JSON.stringify(user));\r\n                    console.log(\"succes ?\");\r\n                    this.setState({loggedin:true})\r\n                    console.log(this.state.loggedin);\r\n                    return user;\r\n                }\r\n            })\r\n           \r\n    }\r\n\r\n    validateForm() {\r\n        return this.state.username.length > 0 && this.state.password.length > 0;\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.validateForm() \r\n            ? this.login(this.state.username, this.state.password)\r\n            : alert(\"invalid submission\");\r\n    };\r\n\r\n    // Redirige vers la page d'acceuil si le user est log\r\n    redirect() {\r\n        if (this.state.loggedin) {\r\n            return <Redirect from = \"/login\" to = \"/actions/\" /> ;\r\n        } else\r\n            return null;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"Login\">\r\n            {this.redirect()}\r\n\r\n            <Navbar />\r\n\r\n            <Card id = \"loginForm\">\r\n                <CardContent>\r\n    \r\n            <form onSubmit={this.handleSubmit}>\r\n              <TextField\r\n                id =\"username\"\r\n                label = \"Username\"\r\n                value={this.state.username}\r\n                onChange={this.handleChange}\r\n                margin=\"normal\"\r\n                />\r\n\r\n              <TextField\r\n                id = \"password\"\r\n                label = \"Password\"\r\n                type=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n                margin=\"normal\"\r\n                />\r\n    \r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                onClick={this.handleSubmit}\r\n              >\r\n                Login\r\n              </Button>\r\n            </form>\r\n            \r\n            </CardContent>\r\n        </Card>\r\n\r\n        <form onSubmit={this.logout}>\r\n            <Button block bsSize=\"large\" type=\"submit\">\r\n                Logout\r\n            </Button>\r\n        </form>\r\n    \r\n          </div>\r\n        );\r\n      }\r\n\r\n\r\n}\r\n\r\nexport default Login","function get_auth(username, password) {\r\n    localStorage.clear();\r\n    const requestOptions = {\r\n        credentials: \"include\",\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify({\r\n            username: username,\r\n            password: password\r\n        })\r\n    };\r\n\r\n    return fetch(\"http://localhost:5000/auth/authenticate\", requestOptions)\r\n        .then(res => res.json())\r\n        .catch(error => console.log(error));\r\n}\r\n\r\nexport {\r\n    get_auth\r\n}","import React from 'react'\r\n\r\nlet logout = () => {\r\n  localStorage.clear();\r\n  return (\r\n    <div>\r\n      <h1>Vous avez été déconnecté!</h1>\r\n      <p>Retour à la <a href=\"/login\">page d'accueil</a></p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default logout\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n            localStorage.getItem('user') ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{ pathname: \"/login\", state: { from: props.location } }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nexport default PrivateRoute;","\r\nconst api = \"http://localhost:5000/content-dev/chat-back\"\r\n\r\n\r\n\r\nfunction get_messages() {\r\n    console.log('GET message')\r\n    let requestOptions = {\r\n        credentials: 'include',\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-Type\": \"application/json; charset=utf-8\",\r\n            'Accept': 'application/json'\r\n        },\r\n    }\r\n    return fetch(api, requestOptions)\r\n        .then(res => {\r\n            console.log(res)\r\n            return res.json()\r\n        })\r\n}\r\n\r\n\r\nfunction sendChat(message) {\r\n    console.log('POST message')\r\n    let requestOptions = {\r\n        credentials: 'include',\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json; charset=utf-8\",\r\n            'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify({chat: message})\r\n    }\r\n    return fetch(api + `/add`, requestOptions)\r\n        .then(res => {\r\n            console.log(res)\r\n            return res.json()\r\n        })\r\n}\r\n\r\nexport {\r\n    get_messages,\r\n    sendChat\r\n}","import React, { Component } from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport {get_messages, sendChat} from '../../services/chatService';\r\n\r\nclass ChatContainer extends Component {\r\n\r\n    state = { newMessage: '' , messages: [], el: null};\r\n\r\n    handleInputChange = e => {\r\n        this.setState({ newMessage: e.target.value });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        sendChat(this.state.newMessage)\r\n        .then(message => {\r\n            console.log(message.chat);\r\n            const messages = this.state.messages.concat([message]);\r\n            this.setState( {messages} );\r\n        });\r\n        this.setState({ newMessage: '' });\r\n    };\r\n\r\n    read(messages) {\r\n        get_messages()\r\n        .then(mes => {\r\n            for (var e in mes) {\r\n                const current_message = mes[e];\r\n                const messages = this.state.messages.concat([current_message]);\r\n                this.setState( {messages} );\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.read()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    scrollToBottom() {\r\n        this.el.scrollIntoView({ behavior: \"instant\", block: \"end\" });\r\n      }\r\n\r\n\r\n    handleKeyDown = e => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            this.handleSubmit();\r\n        }\r\n    }\r\n       \r\n\r\n    render() {\r\n        return (\r\n        <div id=\"ChatContainer\" className=\"chat-container\">\r\n\r\n                <Card >\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                        Chat\r\n                        </Typography>\r\n\r\n                        <List dense style={{maxHeight: 200, overflow: 'auto'}} >\r\n                            <div ref={el => { this.el = el; }}>\r\n                            {this.state.messages.map(msg => (\r\n                            <ListItem key={msg._id} className=\"message\">\r\n                                <ListItemText\r\n                                primary={msg.chat}\r\n                                secondary=\"message.user\"\r\n                                />\r\n                            </ListItem>\r\n                            ))}\r\n                            </div>\r\n                        </List>\r\n\r\n                    </CardContent>\r\n                    <CardActions id=\"chat-input\">\r\n                    <TextField\r\n                        onKeyDown={this.handleKeyDown.bind(this)}\r\n                        placeholder=\"Add your message...\"\r\n                        value={this.state.newMessage}\r\n                        onChange={this.handleInputChange.bind(this)}\r\n                    />\r\n                        <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={this.handleSubmit.bind(this)} onKeyDown={this.handleKeyDown.bind(this)}>\r\n                            Send &nbsp;\r\n                            <Icon>send</Icon>\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n            \r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ChatContainer;\r\n","const api = 'http://localhost:5000/content-dev/actionservice/';\r\n\r\nfunction reqGet() {\r\n    let requestOptions = {\r\n        credentials: 'include',\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    }\r\n    return requestOptions;\r\n}\r\n\r\nfunction reqPost(obj) {\r\n    let requestOptions = {\r\n        credentials: 'include',\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(obj)\r\n    }\r\n    return requestOptions;\r\n}\r\n\r\n\r\n// THis one is DONE\r\nfunction get_actions() {\r\n    console.log('GET actions')\r\n    let requestOptions = reqGet();\r\n    return fetch(api + 'actions', requestOptions)\r\n    .then(res => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        } \r\n        return Promise.reject() \r\n    })\r\n}\r\n\r\n// THis one is DONE\r\nfunction post_action(action) {\r\n    console.log('POST action')\r\n    console.log(JSON.stringify(action))\r\n    let requestOptions = reqPost(action)\r\n    return fetch(api + `actions/add`, requestOptions)\r\n        .then(res => {\r\n            console.log(res)\r\n            return res.json()\r\n        })\r\n}\r\n\r\n// THis one is DONE\r\nfunction delete_actionById(Id) {\r\n    console.log('DELETE action')\r\n    let requestOptions = reqPost({Id: Id})\r\n    return fetch(api + `actions/delete`, requestOptions)\r\n        .then(res => {\r\n            console.log(res)\r\n            return res.json()\r\n        })\r\n}\r\n\r\n\r\n// THis one is DONE\r\nfunction changeActionStatus(id, status) {\r\n    console.log('CHANGE user status')\r\n    let requestOptions = reqPost({\r\n        id: id,\r\n        status: status\r\n        })\r\n    return fetch(api + 'actions/changestatus', requestOptions)\r\n        .then(res =>  res.json())\r\n}\r\n\r\n\r\n// THis one is DONE\r\nfunction getActionsByStatus(status) {\r\n    console.log('GET actions')\r\n    let requestOptions = reqGet();\r\n    return fetch(api + `actions/status/${status}`, requestOptions)\r\n    .then(res =>  res.json())\r\n}\r\n\r\n\r\n\r\n//_________________________________________________________________\r\n\r\n\r\n\r\n\r\nfunction get_actionById(id) {\r\n    console.log('GET action by Id')\r\n    let requestOptions = {\r\n        credentials: 'include',\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n    return fetch(api + `actions/${id}`, requestOptions)\r\n        .then(res => res.json())\r\n}\r\n\r\nfunction get_actionsByUser(id) {\r\n    console.log('GET action by User')\r\n    let requestOptions = {\r\n        credentials: 'include',\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n    return fetch(api + `actions/user/${id}`, requestOptions)\r\n        .then(res => res.json())\r\n}\r\n\r\nfunction get_actionsByAppli(id) {\r\n    console.log('GET action by Appli')\r\n    let requestOptions = {\r\n        credentials: 'include',\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n    return fetch(api + `actions/appli/${id}`, requestOptions)\r\n        .then(res => res.json())\r\n}\r\n\r\nfunction get_actionsBySearch(term) {\r\n    console.log('GET action by searching')\r\n    let requestOptions = {\r\n        credentials: 'include',\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n    return fetch(api + `actions/search/${term}`, requestOptions)\r\n        .then(res => res.json())\r\n\r\n}\r\n\r\n\r\nexport {\r\n    post_action,\r\n    delete_actionById,\r\n    get_actionsBySearch,\r\n    get_actionsByAppli,\r\n    get_actionsByUser,\r\n    get_actionById,\r\n    get_actions,\r\n    changeActionStatus,\r\n    getActionsByStatus\r\n}","let api = 'http://localhost:5000/content/applicationservice/';\r\n\r\nfunction generateRequest(method, body = {}) {\r\n    let requestOptions = {\r\n        credentials: 'include',\r\n        method: method,\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    };\r\n    if (method !== 'GET') requestOptions.body = JSON.stringify(body)\r\n    return requestOptions\r\n}\r\n\r\nfunction get_campuses() {\r\n    console.log('get fucking campuses')\r\n    let requestOptions = generateRequest('GET')\r\n    return fetch(api + 'newapp/campuses', requestOptions)\r\n        .then(res => {\r\n            return res.json()\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nfunction get_domains() {\r\n    let requestOptions = generateRequest('GET')\r\n    return fetch(api + 'newapp/domains', requestOptions)\r\n        .then(res => res.json())\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport {\r\n    get_campuses,\r\n    get_domains,\r\n    generateRequest\r\n}","import { generateRequest } from './generalService'\r\n\r\nlet api = 'http://localhost:5000/content/appliservice/';\r\n\r\n// This one is DONE\r\nfunction get_applis() {\r\n    let requestOptions = generateRequest('GET')\r\n    return fetch(api + 'applis', requestOptions)\r\n        .then(res => res.json())\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n// This one is DONE\r\nfunction post_appli(appli) {\r\n    let requestOptions = generateRequest('POST', appli)\r\n    return fetch(api + `newapp/createapp`, requestOptions)\r\n        .then(res => {\r\n            return res.json()\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n// This one is DONE\r\nfunction get_applisBySearch(term) {\r\n    console.log('GET applis by searching')\r\n    let requestOptions = generateRequest('GET')\r\n    return fetch(api + `applis/search/${term}`, requestOptions)\r\n        .then(res => res.json())\r\n}\r\n\r\n\r\n// THis one is DONE\r\nfunction delete_appliById(Id) {\r\n    console.log('DELETE appli')\r\n    let requestOptions = {\r\n        credentials: 'include',\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json; charset=utf-8\",\r\n            'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify({ Id: Id })\r\n    }\r\n    return fetch(api + `applis/delete`, requestOptions)\r\n        .then(res => {\r\n            console.log(res)\r\n            return res.json()\r\n        })\r\n}\r\n\r\n\r\nexport {\r\n    delete_appliById,\r\n    get_applisBySearch,\r\n    post_appli,\r\n    get_applis,\r\n}","import React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport {post_action} from '../../services/actionService';\r\n\r\nimport './addAction.css';\r\nimport { get_applis } from '../../services/appliService';\r\n\r\n\r\n\r\nclass AddAction extends Component {\r\n\r\n    state = { \r\n        label: \"\",\r\n        priority: \"Low\",\r\n        file: \"\",\r\n        closingTime: \"\",\r\n        comment: \"\",\r\n        creatorId: 1,\r\n        actionTakerId: 0,\r\n        applicationId:\"Application\",\r\n        applicationLabel:\"Application\",\r\n        applis: []\r\n    }\r\n\r\n    addAction = (action) => {\r\n        return post_action(action)\r\n        .then(res => {\r\n            console.log('POST lançé')\r\n            return res\r\n        })\r\n    }\r\n\r\n    componentWillMount() {\r\n        get_applis()\r\n            .then(appli => {\r\n                for (var e in appli) {\r\n                    const current_appli = appli[e];\r\n                    console.log(current_appli);\r\n                    const applis = this.state.applis.concat([current_appli]);\r\n                    this.setState( {applis} )\r\n                }\r\n            })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const actions = { \r\n            label: this.state.label,\r\n            priority: this.state.priority,\r\n            file: this.state.file,\r\n            closingTime: this.state.closingTime,\r\n            comment: this.state.comment,\r\n            creatorId: this.state.creatorId,\r\n            actionTakerId: this.state.actionTakerId,\r\n            applicationId: this.state.applicationId\r\n        }\r\n        this.addAction(actions)\r\n        .then(res => {\r\n            this.props.onSubmit(res);\r\n        });\r\n        this.setState({ \r\n            label: \"\",\r\n            priority: \"Low\",\r\n            file: \"\",\r\n            closingTime: \"\",\r\n            comment: \"\",\r\n            creatorId:\"\",\r\n            actionTakerId: \"\",\r\n            applicationId:\"\",\r\n            applicationLabel:\"\"\r\n         })\r\n    };\r\n\r\n    handleInputChange = e => {\r\n        console.log(e.target.name);\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    handleAppliChange = e => {\r\n        console.log(e.target.value);\r\n        this.setState({ applicationId: e.target.value });\r\n    };\r\n\r\n    handleClockChange(value, formattedValue) {\r\n        this.setState({\r\n            Closing_Time: value // ISO String, ex: \"2016-11-19T12:00:00.000Z\"\r\n            //formattedValue: formattedValue // Formatted String, ex: \"11/19/2016\"\r\n        });\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n\r\n                <div id=\"container\">\r\n\r\n                <Card >\r\n                    <CardContent id = \"addCard\">\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <TextField\r\n                        name=\"label\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        variant=\"filled\"\r\n                        label=\"Action Title\"\r\n                        placeholder=\"Enter title\"\r\n                        value={this.state.label}\r\n                        onChange={this.handleInputChange.bind(this)}\r\n                    />\r\n\r\n                    <TextField\r\n                        name=\"comment\"\r\n                        type=\"text\"\r\n                        label=\"Action Description\"\r\n                        placeholder=\"Description of the Action\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        variant=\"filled\"\r\n                        value={this.state.comment}\r\n                        onChange={this.handleInputChange.bind(this)}\r\n                    />\r\n\r\n                    <FormControl\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        variant=\"filled\"\r\n                    >\r\n                        <InputLabel>Priority</InputLabel>\r\n                        <Select\r\n                            name=\"priority\"\r\n                            value={this.state.priority}\r\n                            onChange={this.handleInputChange.bind(this)}\r\n                        >\r\n                            <MenuItem value=\"Low\">Low</MenuItem>\r\n                            <MenuItem value=\"Medium\">Medium</MenuItem>\r\n                            <MenuItem value=\"Hight\">Hight</MenuItem>\r\n                        </Select>\r\n                    </FormControl> \r\n\r\n\r\n                    <FormControl\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        variant=\"filled\"\r\n                    >\r\n                        <InputLabel>Application</InputLabel>\r\n                        <Select\r\n                            name=\"applicationId\"\r\n                            value={this.state.applicationId}\r\n                            placeholder={this.state.applicationLabel}\r\n                        >\r\n                            {this.state.applis.map(appli => (\r\n                                <div key={appli._id}>\r\n                                    <MenuItem value= {appli._id} onClick={this.handleAppliChange} >{appli.label}</MenuItem>\r\n                                </div>\r\n                                ))}\r\n                        </Select>\r\n                    </FormControl> \r\n\r\n\r\n                    <TextField\r\n                        name=\"closingTime\"\r\n                        label=\"Closing Time\"\r\n                        type=\"date\"\r\n                        value={this.state.closingTime}\r\n                        onChange={this.handleInputChange.bind(this)}\r\n                    />\r\n                \r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit.bind(this)} >Submit</Button>\r\n                    </form>\r\n\r\n                    </CardContent>\r\n                    </Card>\r\n                    </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AddAction;\r\n","import React, { Component } from 'react';\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport AddAction from './addAction';\r\n\r\nimport { \r\n    delete_actionById,\r\n    changeActionStatus,\r\n    getActionsByStatus\r\n} from '../../services/actionService.js'\r\n\r\nimport './actionList.css';\r\n\r\n\r\nclass ActionList extends Component {\r\n\r\n    state = { actions: [], hide: false}\r\n\r\n    handleAdd = (e) => {\r\n        const hide = !this.state.hide;\r\n        this.setState( {hide} ); \r\n    };\r\n\r\n    handleSubmitAction = act => {\r\n        console.log(act);\r\n        const actions = this.state.actions.concat([act]);\r\n        this.setState( {actions} );\r\n    };\r\n\r\n    displayAdd() {\r\n        if (this.state.hide && this.props.variant === \"progress\") {\r\n            return (\r\n                <div>\r\n                    <Button color=\"primary\" onClick={e => {this.setState({hide: false});}}>Cancel</Button>\r\n                    <AddAction onSubmit={this.handleSubmitAction} actions={this.state.actions} />\r\n                </div>\r\n            )\r\n        } else if (this.props.variant === \"progress\") { \r\n            return (\r\n                <Fab color=\"primary\" aria-label=\"Add\" onClick={this.handleAdd.bind(this)}>\r\n                    <AddIcon />\r\n                </Fab>\r\n            )\r\n        }\r\n    }\r\n\r\n    prom(act) {\r\n        for (var e in act) {\r\n            const current_action = act[e];\r\n            console.log(current_action);\r\n            const actions = this.state.actions.concat([current_action]);\r\n            this.setState( {actions} );\r\n        }\r\n    }\r\n\r\n    display_actions() {\r\n        let actions = [];\r\n        this.setState( {actions} );\r\n        if (this.props.variant ===  \"progress\") {\r\n            getActionsByStatus(\"In Progress\")\r\n                .then(act => this.prom(act));\r\n        } else if (this.props.variant ===  \"done\") {\r\n            getActionsByStatus(\"Done\")\r\n                .then(act => this.prom(act));\r\n        }\r\n    }\r\n\r\n    suppress_action(key) {\r\n        delete_actionById(key)\r\n        .then(res => {\r\n            this.setState( {actions: []} );\r\n            this.display_actions() \r\n        })\r\n    }\r\n    \r\n\r\n\r\n    handleChangeStatus(e, id, status) {\r\n        console.log(e.target.checked)\r\n        if (e.target.checked) {\r\n            changeActionStatus(id, \"Done\")\r\n                .then(this.display_actions());  \r\n        } else { \r\n            changeActionStatus(id, \"In Progress\")\r\n                .then(this.display_actions());\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.display_actions()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"action\">\r\n\r\n                <div id=\"action-list\">\r\n                    {this.state.actions.map(act => (\r\n                        <div key={act._id}>\r\n                        <ExpansionPanel key={act._id}>\r\n                            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n\r\n                                <Typography>{act.label} &nbsp; &nbsp; &nbsp; &nbsp;</Typography>\r\n\r\n                                <Typography>{act.status}</Typography>\r\n\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n\r\n                                <Typography>\r\n                                    {act.comment}\r\n                                </Typography>\r\n\r\n                                <Checkbox\r\n                                    checked={(act.status === \"Done\")}\r\n                                    onChange={(e => this.handleChangeStatus(e, act._id, act.status))}\r\n                                    value=\"checkedG\"\r\n                                />\r\n\r\n                                <IconButton aria-label=\"Delete\" variant=\"contained\" color=\"secondary\" style={{float: \"right\" }} onClick={() => this.suppress_action(act._id)}>\r\n                                    <DeleteIcon />\r\n                                </IconButton>\r\n\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <div id=\"action-add\" >\r\n                    {this.displayAdd()}\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ActionList\r\n","const api = 'http://localhost:5000/content-dev/userservice/';\r\n\r\nfunction reqGet() {\r\n    let requestOptions = {\r\n        credentials: 'include',\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    }\r\n    return requestOptions;\r\n}\r\n\r\nfunction reqPost(obj) {\r\n    let requestOptions = {\r\n        credentials: 'include',\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(obj)\r\n    }\r\n    return requestOptions;\r\n}\r\n\r\nfunction generateReqOptions(method, body={}) {\r\n    return {\r\n        credentials: 'include',\r\n        method: method,\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n}\r\n\r\n\r\n// THis one is DONE\r\nfunction getUsers() {\r\n    console.log('GET users')\r\n    let requestOptions = reqGet();\r\n    return fetch(api + 'users', requestOptions)\r\n    .then(res =>  res.json())\r\n}\r\n\r\n// THis one is DONE\r\nfunction post_user(action) {\r\n    console.log('POST user')\r\n    console.log(JSON.stringify(action))\r\n    let requestOptions = reqPost(action)\r\n    return fetch(api + `users/add`, requestOptions)\r\n        .then(res => {\r\n            console.log(res)\r\n            return res.json()\r\n        })\r\n}\r\n\r\n// THis one is DONE\r\nfunction delete_userById(id) {\r\n    console.log('DELETE action')\r\n    let requestOptions = reqPost({Id: id})\r\n    return fetch(api + `users/delete`, requestOptions)\r\n        .then(res => {\r\n            console.log(res)\r\n            return res.json()\r\n        })\r\n}\r\n\r\n// THis one is DONE\r\nfunction getUserById(id) {\r\n    console.log('GET user By id')\r\n    let requestOptions = reqGet();\r\n    return fetch(api + 'users/:id', requestOptions)\r\n        .then(res =>  res.json())\r\n}\r\n\r\n// THis one is DONE\r\nfunction getByStatus(status) {\r\n    console.log('GET ingesys')\r\n    let requestOptions = reqGet();\r\n    return fetch(api + `users/status/${status}`, requestOptions)\r\n    .then(res =>  res.json())\r\n}\r\n\r\n// THis one is DONE\r\nfunction changeUserStatus(id, status) {\r\n    console.log('CHANGE user status')\r\n    let requestOptions = reqPost({\r\n        id: id,\r\n        status: status\r\n        })\r\n    return fetch(api + 'users/changestatus', requestOptions)\r\n        .then(res =>  res.json())\r\n}\r\n\r\nexport {\r\n    post_user,\r\n    delete_userById,\r\n    getUserById,\r\n    getUsers,\r\n    getByStatus,\r\n    changeUserStatus\r\n}","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Navbar from '../navbar/navbar';\r\nimport ChatContainer from './chatContainer';\r\nimport ActionList from './actionsList';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { \r\n    \r\n    } from '../../services/userService.js'\r\n\r\n\r\nimport './actions.css';\r\n\r\nclass Action extends Component {\r\n\r\n  state = { user: null, actions: []  }\r\n\r\n\r\n    switchStatus() {\r\n        if (this.state.user.status === \"admin\") {\r\n            return (\r\n                <Link className=\"navLink\" to=\"/logout\">\r\n                    <Button variant=\"contained\"> Switch status </Button>\r\n                </Link>\r\n            )\r\n        }\r\n    }\r\n    //verif de /content\r\n    // componentDidMount(){\r\n    //     let requestOptions = {\r\n    //         credentials: 'include',\r\n    //         method: 'GET',\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\"\r\n    //         }\r\n    //     }\r\n    //     fetch(\"http://localhost:5000/auth/authenticate\", requestOptions)\r\n    //     .then(res =>  console.log(res))\r\n    // }\r\n\r\n\r\n    \r\n\r\n    render() {\r\n      return  (\r\n        <div className=\"homeGlobal\">\r\n\r\n            <Navbar>\r\n                <Link className=\"nav-link\" to=\"/logout\">\r\n                    <Button variant=\"contained\" color=\"secondary\"> Logout </Button>\r\n                </Link>\r\n            </Navbar>\r\n\r\n            <div className=\"switchStatus\">\r\n                {//this.switchStatus().bind(this)\r\n                }\r\n            </div>\r\n\r\n            <div className=\"chatList\" >\r\n                <div className=\"chat\">\r\n                    <ChatContainer/>\r\n                </div>\r\n\r\n                <div className=\"progressList\">\r\n                    <ActionList variant=\"progress\"/>  \r\n                </div>\r\n\r\n                <div className = \"divider\" >\r\n                    <Divider />\r\n                </div>\r\n\r\n                \r\n\r\n                <div className=\"doneList\">\r\n                    <ActionList variant=\"done\"/>  \r\n                </div>\r\n                \r\n            </div>\r\n            \r\n\r\n        </div>\r\n      );\r\n  } \r\n\r\n}\r\n\r\nexport default Action;\r\n","const api = 'http://localhost:5000/content-dev/vmservice/';\r\n\r\n\r\n// This one is DONE\r\nfunction get_vms() {\r\n    console.log('GET vms')\r\n    let requestOptions = {\r\n        credentials: 'include',\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n    return fetch(api + 'vms', requestOptions)\r\n    .then(res => res.json())\r\n}\r\n\r\n// This one is DONE\r\nfunction post_vm(vm) {\r\n    console.log('POST vm')\r\n    console.log(JSON.stringify(vm))\r\n    let requestOptions = {\r\n        credentials: 'include',\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json; charset=utf-8\",\r\n            'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(vm)\r\n    }\r\n    return fetch(api + `vms/add`, requestOptions)\r\n        .then(res => {\r\n            console.log(res)\r\n            return res.json()\r\n        })\r\n}\r\n\r\n// This one is DONE\r\nfunction get_vmsBySearch(term) {\r\n    console.log('GET vms by searching')\r\n    let requestOptions = {\r\n        credentials: 'include',\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n    return fetch(api + `vms/search/${term}`, requestOptions)\r\n        .then(res => res.json())\r\n}\r\n\r\n\r\n// THis one is DONE\r\nfunction delete_vmById(Id) {\r\n    console.log('DELETE vm')\r\n    let requestOptions = {\r\n        credentials: 'include',\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json; charset=utf-8\",\r\n            'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify({Id: Id})\r\n    }\r\n    return fetch(api + `vms/delete`, requestOptions)\r\n        .then(res => {\r\n            console.log(res)\r\n            return res.json()\r\n        })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//_____________________________________________________________________________\r\n\r\nfunction get_vmById(id) {\r\n    console.log('GET vm by Id')\r\n    let requestOptions = {\r\n        credentials: 'include',\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n    return fetch(api + `vms/${id}`, requestOptions)\r\n        .then(res => res.json())\r\n}\r\n\r\nfunction get_vmsByAppli(id) {\r\n    console.log('GET vms by applications')\r\n    let requestOptions = {\r\n        credentials: 'include',\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n    return fetch(api + `vms/appli/${id}`, requestOptions)\r\n        .then(res => res.json())\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport {\r\n    post_vm,\r\n    get_vmsBySearch,\r\n    get_vmsByAppli,\r\n    get_vmById,\r\n    get_vms,\r\n    delete_vmById\r\n}","import React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport {post_vm} from '../../services/vmService';\r\n\r\nimport './addVm.css';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass AddVm extends Component {\r\n\r\n    state = { \r\n        Label: \"\",\r\n        File: \"\",\r\n        Campus: \"Paris-Saclay\",\r\n        Comment: \"\"\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        post_vm(this.state)\r\n        .then(res => {\r\n            this.props.onSubmit(res);\r\n        });\r\n        this.setState({ \r\n            Label: \"\",\r\n            File: \"\",\r\n            Campus: \"Paris-Saclay\",\r\n            Comment: \"\"\r\n         })\r\n    };\r\n\r\n    handleInputChange = e => {\r\n        console.log(e.target.name);\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n\r\n                <div id=\"container\">\r\n\r\n                <Card >\r\n                    <CardContent id = \"addCard\">\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <TextField\r\n                        name=\"Label\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        variant=\"filled\"\r\n                        label=\"VM Title\"\r\n                        placeholder=\"Enter title\"\r\n                        value={this.state.Label}\r\n                        onChange={this.handleInputChange.bind(this)}\r\n                    />\r\n\r\n                    <TextField\r\n                        name=\"Comment\"\r\n                        type=\"text\"\r\n                        label=\"VM Description\"\r\n                        placeholder=\"Description of the VM\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        variant=\"filled\"\r\n                        value={this.state.Comment}\r\n                        onChange={this.handleInputChange.bind(this)}\r\n                    />\r\n\r\n                    <FormControl\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        variant=\"filled\"\r\n                    >\r\n                        <InputLabel>Campus</InputLabel>\r\n                        <Select \r\n                            name=\"Campus\"\r\n                            value={this.state.Campus}\r\n                            onChange={this.handleInputChange.bind(this)}\r\n                        >\r\n                            <MenuItem value=\"Paris-Saclay\">Paris-Saclay</MenuItem>\r\n                            <MenuItem value=\"Rennes\">Rennes</MenuItem>\r\n                            <MenuItem value=\"Metz\">Metz</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n\r\n                    <TextField\r\n                        id=\"contained-button-file\"\r\n                        multiple\r\n                        name=\"File\"\r\n                        type=\"file\"\r\n                        style={{display: \"none\"}}\r\n                    />\r\n                    <label htmlFor=\"contained-button-file\">\r\n                        <Button \r\n                            variant=\"contained\"\r\n                            component=\"span\"\r\n                            name=\"File\"\r\n                            type=\"file\"\r\n                            label=\"File\"\r\n                            margin=\"normal\"\r\n                            value={this.state.file}\r\n                            onClick={this.handleInputChange.bind(this)}\r\n                        >\r\n                            Upload\r\n                        </Button>\r\n\r\n                        <TextField\r\n                            name=\"File\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                            placeholder=\"File title\"\r\n                            value={this.state.file}\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                              }}\r\n                        />\r\n                    </label>\r\n                \r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit.bind(this)} >Submit</Button>\r\n                    </form>\r\n\r\n                    </CardContent>\r\n                    </Card>\r\n\r\n\r\n                    </div>\r\n\r\n            <div id=\"container\">\r\n                    <Table >\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell >Vm Title</TableCell >\r\n                                <TableCell >File</TableCell >\r\n                                <TableCell >Campus</TableCell >\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>{this.state.Label}</TableCell>\r\n                                <TableCell>{this.state.File}</TableCell>\r\n                                <TableCell>{this.state.Campus}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n            </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AddVm;\r\n","import React, { Component } from 'react';\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport AddVm from './addVm';\r\n\r\nimport { \r\n    delete_vmById,\r\n    get_vms } from '../../services/vmService.js'\r\n\r\nimport './vmList.css';\r\n\r\n\r\nclass VmList extends Component {\r\n\r\n    state = { vms: [], hide: false}\r\n\r\n    handleAdd = (e) => {\r\n        const hide = !this.state.hide;\r\n        this.setState( {hide} ); \r\n    };\r\n\r\n    handleSubmitVm = vm => {\r\n        console.log(vm);\r\n        const vms = this.state.vms.concat([vm]);\r\n        this.setState( {vms} );\r\n    };\r\n\r\n    displayAdd() {\r\n        if (this.state.hide) {\r\n            return (\r\n                <div>\r\n                    <Button color=\"primary\" onClick={e => {this.setState({hide: false});}}>Cancel</Button>\r\n                    <AddVm onSubmit={this.handleSubmitVm} vms={this.state.vms} />\r\n                </div>\r\n            )\r\n        } else { \r\n            return (\r\n                <Fab color=\"primary\" aria-label=\"Add\" onClick={this.handleAdd.bind(this)}>\r\n                    <AddIcon />\r\n                </Fab>\r\n            )\r\n        }\r\n    }\r\n\r\n    display_vms() {\r\n        get_vms().then(vm => {\r\n            for (var e in vm) {\r\n                const current_vm = vm[e];\r\n                console.log(current_vm);\r\n                const vms = this.state.vms.concat([current_vm]);\r\n                this.setState( {vms} );\r\n            }\r\n        })\r\n    }\r\n\r\n    suppress_vm(key) {\r\n        delete_vmById(key)\r\n        .then(res => {\r\n            this.setState( {vm: []} );\r\n            this.display_vms() \r\n        })\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.display_vms()\r\n      }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"vm\">\r\n\r\n                <div id=\"vm-list\">\r\n                    {this.state.vms.map(vm => (\r\n                        <div key={vm._id}>\r\n                        <ExpansionPanel key={vm._id}>\r\n                            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                                <Typography>{vm.Label}</Typography>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                <Typography>\r\n                                    {vm.Comment}\r\n                                </Typography>\r\n                                <IconButton aria-label=\"Delete\" variant=\"contained\" color=\"secondary\" style={{float: \"right\" }} onClick={() => this.suppress_vm(vm._id)}>\r\n                                    <DeleteIcon />\r\n                                </IconButton>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <div id=\"vm-add\" >\r\n                    {this.displayAdd()}\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default VmList","import React, { Component } from 'react';\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nimport { \r\n    delete_vmById,\r\n    get_vmsBySearch } from '../../services/vmService.js'\r\n\r\nimport './vmSearch.css';\r\n\r\nclass VmSearch extends Component {\r\n\r\n    state = { vms: [], term: \"\"}\r\n\r\n    handleChange(e) {\r\n        const term = e.target.value\r\n        this.setState({ term })\r\n        const vms = [];\r\n        this.setState( {vms} );\r\n        if(term !== \"\" ) {\r\n            get_vmsBySearch(term).then(vm => {\r\n                for (var e in vm) {\r\n                    const current_vm = vm[e];\r\n                    const vms = this.state.vms.concat([current_vm]);\r\n                    this.setState( {vms} );\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    suppress_vm(key) {\r\n        delete_vmById(key)\r\n        .then(res => {\r\n            this.setState( {vm: []} );\r\n            this.display_vms() \r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"vm-search\">\r\n\r\n                <div id=\"SearchBar\">\r\n                    <div>\r\n                        <SearchIcon />\r\n                    </div>\r\n                    <InputBase\r\n                        placeholder=\"Search…\"\r\n                        name=\"term\"\r\n                        onChange={this.handleChange.bind(this)}\r\n                        margin=\"normal\"\r\n                        value={this.state.term}\r\n                    />\r\n                </div>\r\n                \r\n                {this.state.vms.map(vm => (\r\n                    <div key={vm._id}>\r\n                    <ExpansionPanel key={vm._id}>\r\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                            <Typography>{vm.Label}</Typography>\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails>\r\n                            <Typography>\r\n                                {vm.Comment}.\r\n                            </Typography>\r\n                            <IconButton aria-label=\"Delete\" variant=\"contained\" color=\"secondary\" style={{float: \"right\" }} onClick={() => this.suppress_vm(vm._id)}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default VmSearch","import React, { Component } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Navbar from '../navbar/navbar';\r\nimport VmList from './vmList';\r\nimport VmSearch from './vmSearch';\r\n\r\nimport './vm.css';\r\n\r\n\r\nclass Vm extends Component {\r\n\r\n  state = { user: null, actions: []  }\r\n\r\n  handleLogout = (event) => {\r\n      this.props.history.push('/login');\r\n  }\r\n\r\n  render() {\r\n      return  (\r\n        <div id=\"home_global\">\r\n\r\n            <Navbar>\r\n                <Button variant=\"contained\" color=\"secondary\"> Logout </Button>\r\n            </Navbar>\r\n\r\n            <div>\r\n                <VmSearch />\r\n            </div>\r\n\r\n            <Divider />\r\n\r\n            <div id=\"vmlist\">\r\n                <VmList />  \r\n            </div>\r\n\r\n        </div>\r\n      );\r\n  } \r\n\r\n}\r\n\r\nexport default Vm;\r\n","import React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport { post_appli } from '../../services/appliService';\r\nimport { get_campuses, get_domains } from '../../services/generalService';\r\n\r\nimport './addAppli.css';\r\n\r\n\r\nexport default class AddAppli extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            appCode: \"\",\r\n            appLabel: \"\",\r\n            appComment: \"\",\r\n            campuses: [],\r\n            selectedCampus: \"\",\r\n            domains: [],\r\n            selectedDomain: \"\",\r\n            subDomains: {},\r\n            selectedSubDomain: \"\",\r\n            subDomainOptions: [],\r\n            newApplication: {\r\n                appCode: '',\r\n                appLabel: '',\r\n                appCampus: '',\r\n                appDomain: '',\r\n                appSubDomain: '',\r\n                comment: ''\r\n            }\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    get_campuses() {\r\n        let campuses;\r\n        get_campuses()\r\n            .then(res => {\r\n                console.log(res)\r\n                campuses = res.campuses\r\n            })\r\n            .then(() => {\r\n                this.setState({ campuses: campuses })\r\n                this.setState({ selectedCampus: campuses[0]})\r\n            })\r\n    }\r\n\r\n    get_domains() {\r\n        let domains = [], subDomains = {};\r\n        get_domains()\r\n            .then(res => {\r\n                for (var key in res.domains) {\r\n                    domains.push(res.domains[key])\r\n                };\r\n                subDomains = res.subDomains;\r\n            })\r\n            .then(() => {\r\n                this.setState({\r\n                    domains: domains,\r\n                    subDomains: subDomains\r\n                }, () => {\r\n                    this.setState({ selectedDomain: this.state.domains[1]})\r\n                    this.setState({ subDomainOptions: this.state.subDomains[this.state.domains[1]]}, () => this.setState({ selectedSubDomain: this.state.subDomainOptions[0]}))\r\n                })\r\n            })\r\n        \r\n    }\r\n\r\n    componentWillMount() {\r\n        this.get_campuses()\r\n        this.get_domains()\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            newApplication: {\r\n                appCode: this.state.appCode,\r\n                appLabel: this.state.appLabel,\r\n                appCampus: this.state.selectedCampus,\r\n                appDomain: this.state.selectedDomain,\r\n                appSubDomain: this.state.selectedSubDomain,\r\n                comment: this.state.appComment\r\n            }\r\n        }, () => post_appli(this.state.newApplication)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.success) {\r\n                    alert(res.msg)\r\n                } else {\r\n                    alert(res.msg)\r\n                }\r\n            }));\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name] : event.target.value})\r\n    }\r\n\r\n    /*handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        post_appli(this.state)\r\n            .then(res => {\r\n                this.props.onSubmit(res);\r\n            });\r\n        this.setState({\r\n            label: \"\",\r\n            filePath: \"\",\r\n            Campus: \"Paris-Saclay\",\r\n            Comment: \"\"\r\n        })\r\n    };*/\r\n\r\n    updateSubDomains = (event) => {\r\n        let selectedDomain = event.target.value\r\n        this.state.selectedDomain = selectedDomain\r\n        let subDomainOptions = this.state.subDomains[selectedDomain]\r\n        this.setState({ subDomainOptions: subDomainOptions }, () => this.setState({selectedSubDomain: this.state.subDomainOptions[0]}))\r\n    }\r\n\r\n    render() {\r\n        // Declaring options\r\n        let campusesOptions = this.state.campuses.map(campus => {\r\n            return <MenuItem key={campus} value={campus}>{campus}</MenuItem>\r\n        })\r\n        let domainsOptions = this.state.domains.map(domain => {\r\n            return <MenuItem key={domain} value={domain}>{domain}</MenuItem>\r\n        })\r\n        let subDomainOptions = this.state.subDomainOptions.map(subDomain => {\r\n            return <MenuItem key={subDomain} value={subDomain}>{subDomain}</MenuItem>\r\n        })\r\n        return (\r\n            <div>\r\n                <div id=\"container\">\r\n                    <Card >\r\n                        <CardContent id=\"addCard\">\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <TextField\r\n                                    name=\"appCode\"\r\n                                    type=\"text\"\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    variant=\"filled\"\r\n                                    label=\"Code de l'application\"\r\n                                    placeholder=\"Enter application code\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.appCode}\r\n                                />\r\n\r\n                                <TextField\r\n                                    name=\"appLabel\"\r\n                                    type=\"text\"\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    variant=\"filled\"\r\n                                    label=\"Libellé de l'application\"\r\n                                    placeholder=\"Enter title\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.appLabel}\r\n                                />\r\n\r\n                                <TextField\r\n                                    name=\"appComment\"\r\n                                    type=\"text\"\r\n                                    label=\"Application Description\"\r\n                                    placeholder=\"Description of the Application\"\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    variant=\"filled\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.appComment}\r\n                                />\r\n\r\n                                <FormControl\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    variant=\"filled\"\r\n                                >\r\n                                    <InputLabel>Campus</InputLabel>\r\n                                    <Select\r\n                                        name=\"selectedCampus\"\r\n                                        value={this.state.selectedCampus}\r\n                                        onChange={this.handleChange}\r\n                                    >\r\n                                        {campusesOptions}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                                <FormControl\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    variant=\"filled\"\r\n                                >\r\n                                    <InputLabel>Domain</InputLabel>\r\n                                    <Select\r\n                                        name=\"Domain\"\r\n                                        value={this.state.selectedDomain}\r\n                                        onChange={this.updateSubDomains}\r\n                                    >\r\n                                        {domainsOptions}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                                <FormControl\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    variant=\"filled\"\r\n                                >\r\n                                    <InputLabel>Sous domaine</InputLabel>\r\n                                    <Select\r\n                                        name=\"selectedSubDomain\"\r\n                                        value={this.state.selectedSubDomain}\r\n                                        onChange={this.handleChange}\r\n                                    >\r\n                                        {subDomainOptions}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit.bind(this)} >Submit</Button>\r\n                            </form>\r\n\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport AddAppli from './addAppli';\r\n\r\nimport { \r\n    delete_appliById,\r\n    get_applis } from '../../services/appliService.js'\r\n\r\nimport './appliList.css';\r\n\r\n\r\nclass AppliList extends Component {\r\n\r\n    state = { applis: [], hide: false}\r\n\r\n    handleAdd = (e) => {\r\n        const hide = !this.state.hide;\r\n        this.setState( {hide} ); \r\n    };\r\n\r\n    handleSubmitAppli = appli => {\r\n        console.log(appli);\r\n        const applis = this.state.applis.concat([appli]);\r\n        this.setState( {applis} );\r\n    };\r\n\r\n    displayAdd() {\r\n        if (this.state.hide) {\r\n            return (\r\n                <div>\r\n                    <Button color=\"primary\" onClick={e => {this.setState({hide: false});}}>Cancel</Button>\r\n                    <AddAppli onSubmit={this.handleSubmitAppli} applis={this.state.applis} />\r\n                </div>\r\n            )\r\n        } else { \r\n            return (\r\n                <Fab color=\"primary\" aria-label=\"Add\" onClick={this.handleAdd.bind(this)}>\r\n                    <AddIcon />\r\n                </Fab>\r\n            )\r\n        }\r\n    }\r\n\r\n    display_applis() {\r\n        get_applis().then(applis => {\r\n            for (const e of applis) {\r\n                const current_appli = e;\r\n                console.log(current_appli);\r\n                const newApplis = this.state.applis.concat([current_appli]);\r\n                this.setState( {applis: newApplis} );\r\n            }\r\n        })\r\n    }\r\n\r\n    suppress_appli(key) {\r\n        delete_appliById(key)\r\n        .then(res => {\r\n            this.setState( {appli: []} );\r\n            this.display_applis() \r\n        })\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.display_applis()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"appli\">\r\n\r\n                <div id=\"appli-list\">\r\n                    {this.state.applis.map(appli => (\r\n                        <div key={appli._id}>\r\n                            <ExpansionPanel>\r\n                                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                                    <Typography>{appli.Label}</Typography>\r\n                                </ExpansionPanelSummary>\r\n                                <ExpansionPanelDetails>\r\n                                    <Typography>\r\n                                        {appli.Comment}\r\n                                    </Typography>\r\n                                    <IconButton aria-label=\"Delete\" variant=\"contained\" color=\"secondary\" style={{float: \"right\" }} onClick={() => this.suppress_appli(appli._id)}>\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </ExpansionPanelDetails>\r\n                            </ExpansionPanel>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <div id=\"appli-add\" >\r\n                    {this.displayAdd()}\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AppliList","import React, { Component } from 'react';\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nimport { \r\n    delete_appliById,\r\n    get_applisBySearch } from '../../services/appliService.js'\r\n\r\nimport './appliSearch.css';\r\n\r\nclass AppliSearch extends Component {\r\n\r\n    state = { applis: [], term: \"\"}\r\n\r\n    handleChange(e) {\r\n        const term = e.target.value\r\n        this.setState({ term })\r\n        const applis = [];\r\n        this.setState( {applis} );\r\n        if(term !== \"\" ) {\r\n            get_applisBySearch(term).then(appli => {\r\n                for (var e in appli) {\r\n                    const current_appli = appli[e];\r\n                    const applis = this.state.applis.concat([current_appli]);\r\n                    this.setState( {applis} );\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    suppress_appli(key) {\r\n        delete_appliById(key)\r\n        .then(res => {\r\n            this.setState( {appli: []} );\r\n            this.display_applis() \r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"appli-search\">\r\n\r\n                <div id=\"SearchBar\">\r\n                    <div>\r\n                        <SearchIcon />\r\n                    </div>\r\n                    <InputBase\r\n                        placeholder=\"Search…\"\r\n                        name=\"term\"\r\n                        onChange={this.handleChange.bind(this)}\r\n                        margin=\"normal\"\r\n                        value={this.state.term}\r\n                    />\r\n                </div>\r\n                \r\n                {this.state.applis.map(appli => (\r\n                    <div key={appli._id}>\r\n                    <ExpansionPanel key={appli._id}>\r\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                            <Typography>{appli.Label}</Typography>\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails>\r\n                            <Typography>\r\n                                {appli.Comment}.\r\n                            </Typography>\r\n                            <IconButton aria-label=\"Delete\" variant=\"contained\" color=\"secondary\" style={{float: \"right\" }} onClick={() => this.suppress_v(appli._id)}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AppliSearch","import React, { Component } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Navbar from '../navbar/navbar';\r\nimport AppliList from './appliList';\r\nimport AppliSearch from './appliSearch';\r\n\r\nimport './appli.css';\r\n\r\n\r\nclass Appli extends Component {\r\n\r\n  state = { user: null, actions: []  }\r\n\r\n  handleLogout = (event) => {\r\n      this.props.history.push('/login');\r\n  }\r\n\r\n  render() {\r\n      return  (\r\n        <div id=\"home_global\">\r\n\r\n            <Navbar>\r\n                <Button variant=\"contained\" color=\"secondary\"> Logout </Button>\r\n            </Navbar>\r\n\r\n            <div>\r\n                <AppliSearch />\r\n            </div>\r\n\r\n            <Divider />\r\n\r\n            <div id=\"applilist\">\r\n                <AppliList />  \r\n            </div>\r\n\r\n        </div>\r\n      );\r\n  } \r\n\r\n}\r\n\r\nexport default Appli;\r\n","import React, { Component } from 'react';\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n    getByStatus,\r\n    getUsers,\r\n    changeUserStatus\r\n} from '../../services/userService.js'\r\n\r\nimport './userList.css';\r\n\r\n\r\nclass UserList extends Component {\r\n\r\n    state = { users: [], switch: \"users\"}\r\n\r\n\r\n    displayIngesys() {\r\n        const users = [];\r\n        this.setState( {users} );\r\n        getByStatus(\"ingesys\").then(inge => {\r\n            for (var e in inge) {\r\n                const currentUser = inge[e];\r\n                const users = this.state.users.concat([currentUser]);\r\n                this.setState( {users} );\r\n            }\r\n        })\r\n    }\r\n\r\n    displayAll() {\r\n        const users = [];\r\n        this.setState( {users} );\r\n        getUsers().then(inge => {\r\n            for (var e in inge) {\r\n                const currentUser = inge[e];\r\n                console.log(currentUser);\r\n                const users = this.state.users.concat([currentUser]);\r\n                this.setState( {users} );\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSwitch() {\r\n        const users = [];\r\n        this.setState( {users} );\r\n        if (this.state.switch === \"users\") {\r\n            const elemt = \"ingesys\"\r\n            this.setState( {switch: elemt} )\r\n            this.displayAll()\r\n        } else { \r\n            const elemt = \"users\"\r\n            this.setState( {switch: elemt} )\r\n            this.displayIngesys()\r\n        }\r\n    }\r\n\r\n    promoteUser(id, dir, status) {\r\n\r\n\r\n        if (dir === 'up' && status === 'ingesys') {\r\n            return changeUserStatus(id, 'admin')\r\n                .then(this.displayAll())\r\n        } else if (dir === 'up' && status === 'user') {\r\n            return changeUserStatus(id, 'ingesys')\r\n                .then(this.displayIngesys())\r\n        } else if (dir === 'down' && status === 'ingesys') {\r\n            return changeUserStatus(id, 'user')\r\n                .then(this.displayAll())\r\n        } else if (dir === 'down' && status === 'admin') {\r\n            return changeUserStatus(id, 'ingesys')\r\n                .then(this.displayIngesys())\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    componentWillMount() {\r\n        this.displayIngesys()\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"users\">\r\n\r\n                <div className=\"view\">\r\n                    <Button onClick={this.handleSwitch.bind(this)}>\r\n                        See all {this.state.switch}\r\n                    </Button>\r\n                </div>\r\n\r\n                <Divider />\r\n\r\n                <div className=\"ingesysList\">\r\n                    {this.state.users.map(inge => (\r\n                        <div key={inge._id}>\r\n                        <ExpansionPanel>\r\n                            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n\r\n                                <Typography>{inge.name} &nbsp;</Typography>\r\n\r\n                                <Typography>&nbsp; {inge.status}</Typography>\r\n\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n\r\n                                <Typography>\r\n                                    {inge.mail} &nbsp; &nbsp; &nbsp; &nbsp;\r\n                                </Typography>\r\n\r\n                                <Button onClick={(e => this.promoteUser(inge._id, 'up', inge.status))} variant=\"contained\" > Promote </Button>\r\n                                <Button onClick={e => this.promoteUser(inge._id, 'down', inge.status)} variant=\"contained\" > Downgrade </Button>\r\n\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default UserList\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Navbar from '../navbar/navbar';\r\nimport UserList from './userList';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nimport './users.css';\r\n\r\nclass User extends Component {\r\n\r\n  state = { user: null, actions: []  }\r\n\r\n\r\n\r\n  render() {\r\n      return  (\r\n        <div className=\"homeGlobal\">\r\n\r\n            <Navbar>\r\n\r\n                <div className=\"switch\">\r\n                   <Link className=\"nav-link\" to=\"/actions\">\r\n                        <Button variant=\"contained\"> Switch status </Button>\r\n                    </Link>\r\n                </div>\r\n                <div className = \"logout\">\r\n\r\n                    <Link className=\"nav-link\" to=\"/logout\">\r\n                        <Button variant=\"contained\" color=\"secondary\"> Logout </Button>\r\n                    </Link> \r\n                </div>\r\n                \r\n            </Navbar>\r\n\r\n            <div className=\"userList\">\r\n                <UserList />  \r\n            </div>\r\n\r\n        </div>\r\n      );\r\n  } \r\n\r\n}\r\n\r\nexport default User;\r\n","import { Route,Redirect, Switch} from \"react-router-dom\";\r\nimport React from 'react';\r\n\r\nimport Login from \"./components/authentification/login\";\r\nimport Logout from \"./components/authentification/logout.js\";\r\nimport PrivateRoute from \"./components/authentification/privateRoute.js\";\r\nimport Action from \"./components/actions/actions\";\r\nimport Vm from \"./components/virtualMachines/vm\";\r\nimport Appli from \"./components/applications/appli\";\r\nimport User from \"./components/users/users\";\r\n\r\n\r\n// This defines the routes to the different Pages\r\n\r\nconst Page = () => (\r\n  <Switch>\r\n    <Route path=\"/login/\" component={Login} />\r\n    <PrivateRoute path=\"/logout/\" component={Logout} />\r\n    <PrivateRoute path=\"/actions/\" component={Action} />\r\n    <PrivateRoute path=\"/vms/\" component={Vm} />\r\n    <PrivateRoute path=\"/applis/\" component={Appli} />\r\n    <PrivateRoute path=\"/users/\" component={User} />\r\n    <PrivateRoute path=\"/users/\" component={User} />\r\n\r\n    <Redirect from=\"/\" to=\"/login/\" />\r\n  </Switch>\r\n);\r\n\r\nexport default Page;\r\n","import React, { Component } from 'react';\r\nimport Page from \"./page\"\r\nimport 'typeface-roboto'\r\n\r\n//This is the App root\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n\r\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\" >\r\n        </link>\r\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\">\r\n        </link>\r\n        \r\n\r\n\r\n        <Page/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\nReactDOM.render(<BrowserRouter>\r\n  <App />\r\n  </BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}